spring:
  application:
    name: glimpse-server
    
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
    
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:glimpse}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate  # 기존 DB 스키마 사용 (변경 안함)
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
    properties:
      hibernate:
        format_sql: true
        show_sql: false
        use_sql_comments: true
        jdbc:
          batch_size: 25
          batch_versioned_data: true
        order_inserts: true
        order_updates: true
    open-in-view: false
    
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        
  security:
    jwt:
      secret: ${JWT_SECRET:glimpse-secret-key-for-jwt-token-generation-change-in-production}
      expiration: 86400000  # 24 hours
      refresh-expiration: 604800000  # 7 days
      
  mail:
    host: smtp.sendgrid.net
    port: 587
    username: apikey
    password: ${SENDGRID_API_KEY:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
      
server:
  port: ${SERVER_PORT:3001}
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on_param
    
# Clerk Configuration
clerk:
  secret-key: ${CLERK_SECRET_KEY:}
  publishable-key: ${CLERK_PUBLISHABLE_KEY:}
  webhook-secret: ${CLERK_WEBHOOK_SECRET:}
  
# Stripe Configuration  
stripe:
  api-key: ${STRIPE_API_KEY:}
  webhook-secret: ${STRIPE_WEBHOOK_SECRET:}
  
# Firebase Configuration
firebase:
  credentials-path: ${FIREBASE_CREDENTIALS_PATH:}
  database-url: ${FIREBASE_DATABASE_URL:}
  
# Twilio Configuration
twilio:
  account-sid: ${TWILIO_ACCOUNT_SID:}
  auth-token: ${TWILIO_AUTH_TOKEN:}
  phone-number: ${TWILIO_PHONE_NUMBER:}
  
# AWS Configuration
aws:
  region: ${AWS_REGION:ap-northeast-2}
  access-key: ${AWS_ACCESS_KEY:}
  secret-key: ${AWS_SECRET_KEY:}
  s3:
    bucket-name: ${AWS_S3_BUCKET:glimpse-uploads}
  ses:
    from-email: ${AWS_SES_FROM_EMAIL:noreply@glimpse.app}
    
# Application Configuration
app:
  cors:
    allowed-origins: ${CORS_ORIGINS:http://localhost:3000,http://localhost:8081}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
    
  dev:
    auth-enabled: ${DEV_AUTH_ENABLED:true}  # x-dev-auth 헤더 지원
    
  file-upload:
    path: ${FILE_UPLOAD_PATH:./uploads}
    allowed-extensions: jpg,jpeg,png,gif,mp4,mov
    
  matching:
    daily-free-likes: 1
    premium-unlimited: true
    verification-code-length: 6
    verification-expiry: 300000  # 5 minutes
    
# Swagger/OpenAPI Configuration
springdoc:
  api-docs:
    path: /api/docs
  swagger-ui:
    path: /api/swagger
    operations-sorter: method
    tags-sorter: alpha
    
# Logging Configuration
logging:
  level:
    root: INFO
    com.glimpse: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/glimpse-server.log
    max-size: 10MB
    max-history: 30