version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: glimpse-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-glimpse}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-glimpse_password}
      POSTGRES_DB: ${POSTGRES_DB:-glimpse_db}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-glimpse}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - glimpse-network

  # Redis for session management and caching
  redis:
    image: redis:7-alpine
    container_name: glimpse-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--pass", "${REDIS_PASSWORD:-redis_password}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - glimpse-network

  # Backend Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: glimpse-server
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://${POSTGRES_USER:-glimpse}:${POSTGRES_PASSWORD:-glimpse_password}@postgres:5432/${POSTGRES_DB:-glimpse_db}?schema=public
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis_password}@redis:6379
      CLERK_SECRET_KEY: ${CLERK_SECRET_KEY}
      CLERK_PUBLISHABLE_KEY: ${CLERK_PUBLISHABLE_KEY}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      JWT_SECRET: ${JWT_SECRET}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_BUCKET_NAME: ${AWS_BUCKET_NAME}
      AWS_REGION: ${AWS_REGION}
      FIREBASE_SERVICE_ACCOUNT: ${FIREBASE_SERVICE_ACCOUNT}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      TOSSPAY_CLIENT_KEY: ${TOSSPAY_CLIENT_KEY}
      TOSSPAY_SECRET_KEY: ${TOSSPAY_SECRET_KEY}
      KAKAO_PAY_CID: ${KAKAO_PAY_CID}
      KAKAO_PAY_SECRET_KEY: ${KAKAO_PAY_SECRET_KEY}
      KAKAO_MAPS_API_KEY: ${KAKAO_MAPS_API_KEY}
      NAVER_CLIENT_ID: ${NAVER_CLIENT_ID}
      NAVER_CLIENT_SECRET: ${NAVER_CLIENT_SECRET}
      GOOGLE_VISION_API_KEY: ${GOOGLE_VISION_API_KEY}
    volumes:
      - server_uploads:/app/uploads
      - ./server/prisma:/app/prisma
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - glimpse-network
    command: >
      sh -c "
        npx prisma migrate deploy &&
        npm start
      "

  # Web Admin Dashboard (Next.js)
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: glimpse-web
    restart: unless-stopped
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${CLERK_PUBLISHABLE_KEY}
      CLERK_SECRET_KEY: ${CLERK_SECRET_KEY}
      NEXT_PUBLIC_API_URL: http://server:3001/api/v1
      NEXT_PUBLIC_WEBSOCKET_URL: ws://server:3001
    ports:
      - "3000:3000"
    depends_on:
      - server
    networks:
      - glimpse-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: glimpse-nginx
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - nginx_logs:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - server
      - web
    networks:
      - glimpse-network

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: glimpse-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@glimpse.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin_password}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - glimpse-network

networks:
  glimpse-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  server_uploads:
  nginx_logs:
  pgadmin_data: