name: Mobile App Build

on:
  push:
    branches: [ main ]
    paths:
      - 'mobile/**'
      - 'shared/**'
  workflow_dispatch:

env:
  NODE_VERSION: '20'

jobs:
  # Build Android
  build-android:
    name: Build Android App
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup Expo
      uses: expo/expo-github-action@v8
      with:
        eas-version: latest
        token: ${{ secrets.EXPO_TOKEN }}
    
    - name: Configure app credentials
      working-directory: ./mobile
      run: |
        echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 -d > google-services.json
        echo "${{ secrets.ENV_PRODUCTION }}" > .env.production
    
    - name: Build Android app
      working-directory: ./mobile
      run: |
        eas build --platform android --profile production --non-interactive
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: android-build
        path: mobile/build-*.aab
        retention-days: 30

  # Build iOS
  build-ios:
    name: Build iOS App
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup Expo
      uses: expo/expo-github-action@v8
      with:
        eas-version: latest
        token: ${{ secrets.EXPO_TOKEN }}
    
    - name: Configure app credentials
      working-directory: ./mobile
      run: |
        echo "${{ secrets.GOOGLE_SERVICES_PLIST }}" | base64 -d > GoogleService-Info.plist
        echo "${{ secrets.ENV_PRODUCTION }}" > .env.production
    
    - name: Setup iOS certificates
      env:
        CERTIFICATE_BASE64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
        P12_PASSWORD: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
        PROVISIONING_PROFILE_BASE64: ${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        # Create variables
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
        
        # Import certificate and provisioning profile
        echo -n "$CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
        echo -n "$PROVISIONING_PROFILE_BASE64" | base64 --decode --output $PP_PATH
        
        # Create temporary keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        
        # Import certificate to keychain
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH
        
        # Apply provisioning profile
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
    
    - name: Build iOS app
      working-directory: ./mobile
      run: |
        eas build --platform ios --profile production --non-interactive
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ios-build
        path: mobile/build-*.ipa
        retention-days: 30

  # Submit to App Stores
  submit-to-stores:
    name: Submit to App Stores
    runs-on: ubuntu-latest
    needs: [build-android, build-ios]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Setup Expo
      uses: expo/expo-github-action@v8
      with:
        eas-version: latest
        token: ${{ secrets.EXPO_TOKEN }}
    
    - name: Submit to Google Play Store
      working-directory: ./mobile
      run: |
        eas submit --platform android --profile production --non-interactive
    
    - name: Submit to Apple App Store
      working-directory: ./mobile
      run: |
        eas submit --platform ios --profile production --non-interactive
    
    - name: Send notification
      if: success()
      uses: 8398a7/action-slack@v3
      with:
        status: success
        text: 'Mobile apps submitted to stores successfully! ðŸ“±'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}